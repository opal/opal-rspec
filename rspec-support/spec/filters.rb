require 'opal_filters'

OpalFilters.group('Bugs') do
  fails "RSpec::Support::ObjectFormatter with a hash object sorts keys to ensure objects are always displayed the same way",  "expected: \"{:a=>\\\"aaa\\\", \\\"b\\\"=>\\\"bbb\\\", :c=>\\\"ccc\\\"}\""
  fails "RSpec::Support::ObjectFormatter with Time objects produces an extended output",  "expected \"1969-12-31 19:01:40.000000 -0000\" to include \"1969-12-31 19:01:40.000101\""
  fails "RSpec::Support::ObjectFormatter with DateTime objects when ActiveSupport is loaded uses a custom format to ensure the output is different when DateTimes differ",  "expected: \"Sat, 01 Jan 2000 01:01:00.100000000 +0000\""
  fails "RSpec::Support::ObjectFormatter with BigDecimal objects uses Ruby's BigDecimal formatting since it is improved in 2.4+",  "expected: \"0.33e1\""
  fails "RSpec::Support::ObjectFormatter given a delegator includes the delegator class in the description",  "undefined method `__getobj__' for #<Object:0x5ab4>"
  fails "RSpec::Support::ObjectFormatter given a delegator includes the delegator class in the description even when protected",  "undefined method `__getobj__' for #<Object:0x5b0c>"
  fails "RSpec::Support::ObjectFormatter given a delegator for a specially-formatted object formats the underlying object normally",  "undefined method `__getobj__' for 3.3"
  fails "RSpec::Support::ObjectFormatter with a non-immediate recursive array formats the recursive element as [...]",  "expected: \"[{:recursive_array=>[...]}]\""
  fails "RSpec::Support::ObjectFormatter with a non-immediate recursive hash formats the recursive element as {...}",  "expected: \"{:array=>[:next_is_recursive_hash, {...}]}\""
  fails "RSpec::Support::ObjectFormatter with an array including a same collection object multiple times does not omit them",  "expected: \"[{:key=>\\\"value\\\"}, {:key=>\\\"value\\\"}]\""
  fails "RSpec::Support::ObjectFormatter with truncation enabled with ANSI escape codes that fall on the truncate split removes that escape code so terminals do not get corrupted print a partial escape code",  "expected: \"#<\\e[33mClass\\e[0m ...\\e[36mcount: \\e[0m42>\""
  fails "RSpec::Support::StdErrSplitter supports methods that stderr supports but StringIO does not",  "undefined method `stat' for #<IO:0xc @fd=2 @flags=\"w\" @eof=false @closed=\"read\" @write_proc=#<Proc:0x"
  fails "RSpec::Support::StdErrSplitter supports #to_io",  "undefined method `to_io' for #<IO:0xc @fd=2 @flags=\"w\" @eof=false @closed=\"read\" @write_proc=#<Proc:0"
  fails "RSpec::Support::StdErrSplitter will fail an example which generates a warning",  "expected /Warnings were generated:/ but nothing was raised"
  fails "rspec warnings and deprecations works when required in isolation",  "undefined method `run_ruby_with_current_load_path' for #<RSpec::ExampleGroups::RspecWarningsAndDeprec"
  fails "rspec warnings and deprecations #warning it should behave like warning helper sets the calling line",  "Kernel received \"warn\" with unexpected arguments"
  fails "rspec warnings and deprecations #warn_with message, options it should behave like warning helper sets the calling line",  "Kernel received \"warn\" with unexpected arguments"
  fails "WithKeywordsWhenNeeded .class_exec will run a block with optional keyword arguments when they are provided",  "undefined method `args' for RSpec::Support::WithKeywordsWhenNeeded"
  fails "WithKeywordsWhenNeeded .class_exec will run a block with required keyword arguments",  "undefined method `args' for RSpec::Support::WithKeywordsWhenNeeded"
  fails "RSpec::Support.class_of with an object having a singleton class returns its non-singleton ancestor class",  "can't define singleton"
  fails "RSpec::Support failure notification isolates notifier changes to the current thread",  "Thread creation not available"
end
