require 'opal_filters'

OpalFilters.group("Failures") do
  # messes up display
  fails "RSpec::Core::Example when there is no explicit description when RSpec.configuration.format_docstrings is set to a block formats the description using the block"
  fails "RSpec::Core::ExampleGroup when RSpec.configuration.format_docstrings is set to a block formats the description with that block"
  # quits the suite prematurely
  fails "RSpec::Core::ExampleGroup#run with RSpec.world.wants_to_quit=true returns without starting the group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#run with fail_fast set to 3 sets RSpec.world.wants_to_quit flag if encountering an exception in before(:all) causing at least 3 failures"
  fails "RSpec::Core::ExampleGroup#run with fail_fast set to 3 does not run examples after 3 failed examples"
  fails "RSpec::Core::ExampleGroup#run with fail_fast enabled sets RSpec.world.wants_to_quit flag if encountering an exception in before(:all)"
  fails "RSpec::Core::ExampleGroup#run with fail_fast enabled does not run examples after the failed example"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks does not set RSpec.world.wants_to_quit in case of an error in before all (without fail_fast?)",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#run with fail_fast set to 3 does not set RSpec.world.wants_to_quit flag if encountering an exception in before(:all) causing less than 3 failures",  "undefined method `metadata' for nil"
end

OpalFilters.group("Bugs") do
  fails "RSpec::Core::Bisect::ShellRunner runs the specs in an isolated environment and reports the results",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::RSpecCoreBisectShellRunner \"runs the specs"
  fails "RSpec::Core::Bisect::ShellRunner honors `run_all_when_everything_filtered`",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::RSpecCoreBisectShellRunner \"honors `run_al"
  fails "RSpec::Core::Bisect::ShellRunner raises BisectFailedError with all run output when it encounters an error loading spec files",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::RSpecCoreBisectShellRunner \"raises BisectF"
  fails "Fail if no examples when 1 passing example succeeds if fail_if_no_examples set to true",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When1PassingExample \"suc"
  fails "Fail if no examples when 1 passing example succeeds if fail_if_no_examples set to false",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When1PassingExample \"suc"
  fails "Fail if no examples when 1 failing example fails if fail_if_no_examples set to true",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When1FailingExample \"fai"
  fails "Fail if no examples when 1 failing example fails if fail_if_no_examples set to false",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When1FailingExample \"fai"
  fails "Fail if no examples when 0 examples fails if fail_if_no_examples set to true",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When0Examples \"fails if "
  fails "Fail if no examples when 0 examples succeeds if fail_if_no_examples set to false",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When0Examples \"succeeds "
  fails "Fail if no examples when 0 examples when custom failure_exit_code set fails if fail_if_no_examples set to true",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailIfNoExamples::When0Examples::WhenCusto"
  fails "Failed line detection finds the source of a failure in a spec file that is defined at the current directory instead of in the normal `spec` subdir",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailedLineDetection \"finds the source of a"
  fails "Failed line detection finds the source of a failure in a spec file loaded by running `ruby file` rather than loaded directly by RSpec",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailedLineDetection \"finds the source of a"
  fails "Failed line detection finds the direct source of failure in any lib, app or spec file, and allows the user to configure what is considered a project source dir",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailedLineDetection \"finds the direct sour"
  fails "Failed line detection finds the callsite of a method provided by a gem that fails (rather than the line in the gem)",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailedLineDetection \"finds the callsite of"
  fails "Failed line detection falls back to finding a line in a gem when there are no backtrace lines in the app, lib or spec directories",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::FailedLineDetection \"falls back to finding"
  fails "Filtering prints a rerun command for shared examples in external files that works to rerun",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering \"prints a rerun command for shar"
  fails "Filtering with a shared example containing a context in a separate file runs the example nested inside the shared",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::WithASharedExampleContainingACo"
  fails "Filtering passing a line-number filter works with different custom runners used in the same process",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingALineNumberFilter \"works"
  fails "Filtering passing a line-number filter trumps exclusions, except for :if/:unless (which are absolute exclusions)",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingALineNumberFilter \"trump"
  fails "Filtering passing a line-number filter works correctly when line numbers align with a shared example group line number from another file",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingALineNumberFilter \"works"
  fails "Filtering passing a line-number-filtered file and a non-filtered file applies the line number filtering only to the filtered file, running all specs in the non-filtered file except excluded ones",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingALineNumberFilteredFileA"
  fails "Filtering passing a line-number-filtered file and a non-filtered file applies command line tag filters only to files that lack a line number filter",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingALineNumberFilteredFileA"
  fails "Filtering passing example ids at the command line selects matching examples",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingExampleIdsAtTheCommandLi"
  fails "Filtering passing example ids at the command line selects matching example groups",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::PassingExampleIdsAtTheCommandLi"
  fails "Filtering with `filter_run_when_matching` filters to matching examples",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::WithFilterRunWhenMatching \"filt"
  fails "Filtering with `filter_run_when_matching` is ignored when no examples match the provided filter",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::Filtering::WithFilterRunWhenMatching \"is i"
  fails "command line --order rand runs the examples and groups in a different order each time",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::OrderRand \"runs"
  fails "command line --order rand:SEED runs the examples and groups in the same order each time",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::OrderRandSEED \""
  fails "command line --seed SEED forces '--order rand' and runs the examples and groups in the same order each time",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::SeedSEED \"force"
  fails "command line --seed SEED runs examples in the same order, regardless of the order in which files are given",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::SeedSEED \"runs "
  fails "command line --order rand --order recently-modified overrides random ordering with recently-modified option",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::OrderRandOrderR"
  fails "command line --order defined on CLI with --order rand in .rspec overrides --order rand with --order defined",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::OrderDefinedOnC"
  fails "command line when a custom order is configured orders the groups and examples by the provided strategy",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::CommandLine::WhenACustomOrde"
  fails "Output stream when a formatter set in a configure block writes to the right output stream",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::OutputStream::WhenAFormatterSetInAConfigur"
  fails "Output stream when a formatter set in a configure block writes to the right output stream even when its a filename",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::OutputStream::WhenAFormatterSetInAConfigur"
  fails "Output stream when a formatter set in a configure block writes to the right output stream even when its a filename",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::OutputStream::WhenAFormatterSetInAConfigur"
  fails "Persistence failures when `config.example_status_persistence_file_path` is configured to an invalid file path (e.g. spec/spec_helper.rb/examples.txt) emits a helpful warning to the user, indicating we cannot write to it, and still runs the spec suite",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::PersistenceFailures::WhenConfigExampleStat"
  fails "Persistence failures when `config.example_status_persistence_file_path` is configured to a file path for which we lack permissions emits a helpful warning to the user, indicating we cannot read from it, and still runs the spec suite",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::PersistenceFailures::WhenConfigExampleStat"
  fails "Spec file load errors nicely handles load-time errors from --require files",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SpecFileLoadErrors \"nicely handles load-ti"
  fails "Spec file load errors prints a single error when it happens on --require files",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SpecFileLoadErrors \"prints a single error "
  fails "Spec file load errors prints a warning when a helper file exits early",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SpecFileLoadErrors \"prints a warning when "
  fails "Spec file load errors nicely handles load-time errors in user spec files",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SpecFileLoadErrors \"nicely handles load-ti"
  fails "Suite hook errors nicely formats errors in `before(:suite)` hooks and exits with non-zero",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SuiteHookErrors \"nicely formats errors in "
  fails "Suite hook errors nicely formats errors in `after(:suite)` hooks and exits with non-zero",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SuiteHookErrors \"nicely formats errors in "
  fails "Suite hook errors nicely formats errors from multiple :suite hooks of both types and exits with non-zero",  "undefined method `setup_aruba' for #<RSpec::ExampleGroups::SuiteHookErrors \"nicely formats errors fro"
  fails "Aggregating failures for a non-pending example via `:aggregate_failures` metadata when the example has an exception, plus another error reports it as a multiple exception error",  "expected #<RSpec::Core::MultipleExceptionError: RSpec::Core::MultipleExceptionError> to have attribut"
  fails "Aggregating failures for a non-pending example via `:aggregate_failures` metadata when the example has multiple exceptions, plus another error reports it as a flat multiple exception error",  "expected #<RSpec::Expectations::MultipleExpectationsNotMetError: #<RSpec::Expectations::FailureAggreg"
  fails "Aggregating failures for a pending example via `:aggregate_failures` metadata when the example has an exception, plus another error reports it as a multiple exception error",  "expected #<RSpec::Core::MultipleExceptionError: RSpec::Core::MultipleExceptionError> to have attribut"
  fails "Aggregating failures for a pending example via `:aggregate_failures` metadata when the example has multiple exceptions, plus another error reports it as a flat multiple exception error",  "expected #<RSpec::Expectations::MultipleExpectationsNotMetError: #<RSpec::Expectations::FailureAggreg"
  fails "RSpec::Core::Configuration#last_run_statuses allows the value to be updated when `example_status_persistence_file_path` is set after first access",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#last_run_statuses allows the value to be updated when `example_status_persistence_file_path` is forced after first access",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#last_run_statuses when `example_status_persistence_file_path` is configured gets the last run statuses from the ExampleStatusPersister",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#last_run_statuses when `example_status_persistence_file_path` is configured returns a memoized value",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#last_run_statuses when `example_status_persistence_file_path` is configured the hash returns `unknown` for unknown example ids for consistency",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#last_run_statuses when `example_status_persistence_file_path` is not configured returns a blank hash without attempting to load the persisted statuses",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#spec_files_with_failures allows the value to be updated when `example_status_persistence_file_path` is set after first access",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#spec_files_with_failures allows the value to be updated when `example_status_persistence_file_path` is forced after first access",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#spec_files_with_failures when `example_status_persistence_file_path` is configured returns a memoized array of unique spec files that contain failed exaples",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#spec_files_with_failures when the file at `example_status_persistence_file_path` has corrupted `status` values defaults invalid statuses to unknown",  "undefined method `__disallow_further_usage!' for RSpec::Core::ExampleStatusPersister"
  fails "RSpec::Core::Configuration#files_to_run, when `only_failures` is set and no explicit paths have been set loads only the files that have failures",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::RSpecCoreConfiguration::File"
  fails "RSpec::Core::Configuration#files_to_run, when `only_failures` is set and no explicit paths have been set loads the default path if there are no files with failures",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::RSpecCoreConfiguration::File"
  fails "RSpec::Core::Configuration#files_to_run, when `only_failures` is set and a path has been set loads the intersection of files matching the path and files with failures",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::RSpecCoreConfiguration::File"
  fails "RSpec::Core::Configuration#files_to_run, when `only_failures` is set and a path has been set loads all files matching the path when there are no intersecting files",  "undefined method `handle_current_dir_change' for #<RSpec::ExampleGroups::RSpecCoreConfiguration::File"
  fails "RSpec::Core::Configuration allows file names with brackets",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/path/to/a_[1:2]spec.rb\"]"
  fails "RSpec::Core::Configuration#on_example_group_definition successfully invokes the block",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#deprecation_stream defaults to standard error",  "undefined method `deprecation_stream' for nil"
  fails "RSpec::Core::Configuration#deprecation_stream when the reporter has already been initialized prints a notice indicating the reconfigured output_stream will be ignored",  "#<RSpec::Core::Configuration:0x20830 @start_time=2022-11-05 23:57:07 +0100 @expectation_frameworks=[]"
  fails "RSpec::Core::Configuration#output_stream= when the reporter has already been initialized prints a notice indicating the reconfigured output_stream will be ignored",  "#<RSpec::Core::Configuration:0x21010 @start_time=2022-11-05 23:57:07 +0100 @expectation_frameworks=[]"
  fails "RSpec::Core::Configuration#requires= adds `lib` to the load path",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/lib\""
  fails "RSpec::Core::Configuration#requires= adds the configured `default_path` to the load path",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/features\""
  fails "RSpec::Core::Configuration#requires= stores the required files",  "expected: [\"a/path\"]"
  fails "RSpec::Core::Configuration#mock_framework defaults to :rspec",  "RSpec's mock_framework configuration option must be configured before any example groups are defined,"
  fails "RSpec::Core::Configuration#mock_framework when rspec-mocks is not installed gracefully falls back to :nothing",  "cannot load such file -- rspec/core/mocking_adapters/null"
  fails "RSpec::Core::Configuration#mock_with allows rspec-mocks to be configured with a provided block",  "RSpec's mock_framework configuration option must be configured before any example groups are defined,"
  fails "RSpec::Core::Configuration#mock_with uses the null adapter when given :nothing",  "uninitialized constant RSpec::Core::MockingAdapters::Null"
  fails "RSpec::Core::Configuration#mock_with when there are already some example groups defined raises an error since this setting must be applied before any groups are defined",  "undefined method `as_stubbed_const' for #<Module:0x2266e>"
  fails "RSpec::Core::Configuration#mock_with when there are already some example groups defined does not raise an error if the default `mock_with :rspec` is re-configured",  "RSpec's mock_framework configuration option must be configured before any example groups are defined,"
  fails "RSpec::Core::Configuration#mock_with when there are already some example groups defined does not raise an error if re-setting the same config",  "undefined method `as_stubbed_const' for #<Module:0x228ca>"
  fails "RSpec::Core::Configuration#expectation_frameworks defaults to :rspec",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expectation_frameworks when rspec-expectations is not installed gracefully falls back to an anonymous module",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with supports multiple calls",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with raises if block given with multiple args",  "expected /expect_with only accepts/, got #<RSpec::Core::Configuration::MustBeConfiguredBeforeExampleG"
  fails "RSpec::Core::Configuration#expect_with behaves like a configurable framework adapter yields a config object if the framework_module supports it",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with behaves like a configurable framework adapter raises if framework module doesn't support configuration",  "expected /must respond to `configuration`/, got #<RSpec::Core::Configuration::MustBeConfiguredBeforeE"
  fails "RSpec::Core::Configuration#expect_with with :rspec requires rspec/expectations",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with with :rspec sets the expectation framework to ::RSpec::Matchers",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with with :test_unit requires rspec/core/test_unit_assertions_adapter",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with with :test_unit sets the expectation framework to ::Test::Unit::Assertions",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with with :minitest requires rspec/core/minitest_assertions_adapter",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with with :minitest sets the expectation framework to ::Minitest::Assertions",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#expect_with when there are already some example groups defined does not raise an error if the default `expect_with :rspec` is re-configured",  "RSpec's expect_with configuration option must be configured before any example groups are defined, bu"
  fails "RSpec::Core::Configuration#files_to_run loads files not following pattern if named explicitly",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_bar.rb\""
  fails "RSpec::Core::Configuration#files_to_run prevents repetition of dir when start of the pattern",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_spec.rb"
  fails "RSpec::Core::Configuration#files_to_run does not prevent repetition of dir when later of the pattern",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_spec.rb"
  fails "RSpec::Core::Configuration#files_to_run supports patterns starting with ./",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_spec.rb"
  fails "RSpec::Core::Configuration#files_to_run supports absolute path patterns",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_spec.rb"
  fails "RSpec::Core::Configuration#files_to_run supports relative path patterns for an alternate directory from `spec`",  "ENOENT: no such file or directory, chdir '/home/user/Code/opal/opal-rspec' -> './spec/rspec/core'"
  fails "RSpec::Core::Configuration#files_to_run does not attempt to treat the pattern relative to `.` if it uses `**` in the first path segment as that would cause it load specs from vendored gems",  "ENOENT: no such file or directory, chdir '/home/user/Code/opal/opal-rspec' -> './spec/rspec/core'"
  fails "RSpec::Core::Configuration#files_to_run reloads when `files_or_directories_to_run` is reassigned",  "expected result to have changed to a file collection \"spec/rspec/core/resources/a_spec.rb\", but did n"
  fails "RSpec::Core::Configuration#files_to_run attempts to load the provided file names",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/path/to/some/file.rb\"]"
  fails "RSpec::Core::Configuration#files_to_run loads files in passed directories in alphabetical order to avoid OS-specific file-globbing non-determinism",  "expected [] to match [(eq \"spec/unit/a_spec.rb\" or eq \"/home/user/Code/opal/opal-rspec/spec/unit/a_sp"
  fails "RSpec::Core::Configuration#files_to_run respects the user-specified order of files and directories passed at the command line",  "expected [] to match [(eq \"spec/b/1_spec.rb\" or eq \"/home/user/Code/opal/opal-rspec/spec/b/1_spec.rb\""
  fails "RSpec::Core::Configuration#files_to_run deduplicates spec files that are listed individually and present in a passed dir",  "expected [] to match [(eq \"spec/unit/b_spec.rb\" or eq \"/home/user/Code/opal/opal-rspec/spec/unit/b_sp"
  fails "RSpec::Core::Configuration#files_to_run with <path>:<line_number> overrides inclusion filters set before config",  "expected: 1"
  fails "RSpec::Core::Configuration#files_to_run with default pattern loads files named _spec.rb",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/spec/rspec/core/resources/a_spec.rb"
  fails "RSpec::Core::Configuration#files_to_run with default default_path loads files in the default path when run by rspec",  "expected `[].empty?` to be falsey, got true"
  fails "RSpec::Core::Configuration#files_to_run with default default_path loads files in the default path when run with DRB (e.g., spork)",  "expected `[].empty?` to be falsey, got true"
  fails "RSpec::Core::Configuration#pattern with single pattern loads all explicitly specified files, even those that do not match the pattern",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core"
  fails "RSpec::Core::Configuration#pattern with single pattern loads files in directories following pattern",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#pattern with single pattern ignores pattern if files are specified",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core"
  fails "RSpec::Core::Configuration#pattern with multiple patterns supports comma separated values",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#pattern with multiple patterns supports comma separated values with spaces",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#pattern with multiple patterns supports curly braces glob syntax",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#pattern after `files_to_run` has been accessed but before files have been loaded still takes affect",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#exclude_pattern with single pattern loads files in directories not following exclude pattern",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration#exclude_pattern with single pattern ignores exclude_pattern if files are specified",  "expected collection contained:  [\"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core"
  fails "RSpec::Core::Configuration#exclude_pattern after `files_to_run` has been accessed but before files have been loaded still takes affect",  "expected [] to include \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/resources"
  fails "RSpec::Core::Configuration with line number assigns the file and line number as a location filter",  "expected: {\"locations\"=>{\"/home/user/Code/opal/opal-rspec/path/to/a_spec.rb\"=>[37]}}"
  fails "RSpec::Core::Configuration with line number assigns multiple files with line numbers as location filters",  "expected: {\"locations\"=>{\"/home/user/Code/opal/opal-rspec/other_spec.rb\"=>[44], \"/home/user/Code/opal"
  fails "RSpec::Core::Configuration with line number assigns files with multiple line numbers as location filters",  "expected: {\"locations\"=>{\"/home/user/Code/opal/opal-rspec/path/to/a_spec.rb\"=>[37, 44]}}"
  fails "RSpec::Core::Configuration with multiple line numbers assigns the file and line numbers as a location filter",  "expected: {\"locations\"=>{\"/home/user/Code/opal/opal-rspec/path/to/a_spec.rb\"=>[1, 3, 5, 7]}}"
  fails "RSpec::Core::Configuration with an example id assigns the file and id as an ids filter",  "expected: {\"ids\"=>{\"./path/to/a_spec.rb\"=>[\"1:2\"]}}"
  fails "RSpec::Core::Configuration with a single file with multiple example ids assigns the file and ids as an ids filter",  "expected: {\"ids\"=>{\"./path/to/a_spec.rb\"=>[\"1:2\", \"1:3\"]}}"
  fails "RSpec::Core::Configuration with a single file with multiple example ids ignores whitespace between scoped ids",  "expected: {\"ids\"=>{\"./path/to/a_spec.rb\"=>[\"1:2\", \"1:3\"]}}"
  fails "RSpec::Core::Configuration with multiple files with ids assigns all of them to the ids filter",  "expected: {\"ids\"=>{\"./path/to/a_spec.rb\"=>[\"1:2\", \"1:3\"], \"./path/to/b_spec.rb\"=>[\"1:4\"]}}"
  fails "RSpec::Core::Configuration with the same file specified multiple times with different scoped ids unions all the ids",  "expected: {\"ids\"=>{\"./path/to/a_spec.rb\"=>[\"1:2\", \"1:3\"]}}"
  fails "RSpec::Core::Configuration#include_context with no metadata filters includes the named shared example group in all groups",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include_context with metadata filters includes the named shared example group in matching groups",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include_context with metadata filters includes the named shared example group in the singleton class of matching examples",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreConfiguration_2::Includ"
  fails "RSpec::Core::Configuration#include with no filter includes the given module into each example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include with no filter includes the given module into each existing example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include with a filter includes the given module into each matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include with a filter includes in example groups that match a deprecated `:example_group` filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include with a filter includes the given module into each existing matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#include with a filter includes the given module into the singleton class of matching examples",  "expected nil to be a kind of NameError"
  fails "RSpec::Core::Configuration#include with a filter does not include the module in an example's singleton class when it has already been included in the group",  "expected: [RSpec::ExampleGroups::Group_4]"
  fails "RSpec::Core::Configuration#extend extends the given module into each matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#extend extends the given module into each existing matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#prepend with no filter prepends the given module into each example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#prepend with no filter prepends the given module into each existing example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#prepend with a filter prepends the given module into each matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#prepend with a filter prepends the given module into each existing matching example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#bisect_runner_class cannot be changed after the runner is in use",  "expected /config.bisect_runner = :shell/, got #<RuntimeError: `config.bisect_runner = \"shell\"` can no"
  fails "RSpec::Core::Configuration#define_derived_metadata allows the provided block to mutate example group metadata",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata allows the provided block to mutate example metadata",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata allows multiple configured blocks to be applied, in order of definition",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata supports cascades of derived metadata, but avoids re-running derived metadata blocks that have already been applied",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata does not allow a derived metadata cascade to recurse infinitely",  "expected SystemStackError, got #<NoMethodError: undefined method `+' for true> with backtrace:"
  fails "RSpec::Core::Configuration#define_derived_metadata registers top-level groups before invoking the callback so the logic can configure already registered groups",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata registers nested groups before invoking the callback so the logic can configure already registered groups",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata registers examples before invoking the callback so the logic can configure already registered groups",  "expected collection contained:  [#<RSpec::Core::Example \"ex\">]"
  fails "RSpec::Core::Configuration#define_derived_metadata when passed a metadata filter only applies to the groups and examples that match that filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata when passed a metadata filter applies if any of multiple filters apply (to align with module inclusion semantics)",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#define_derived_metadata when passed a metadata filter allows a metadata filter to be passed as a raw symbol",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#when_first_matching_example_defined does not run the block if groups match the metadata but no examples do",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#when_first_matching_example_defined still runs after the first matching example even if there is a group that matches earlier",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group extends with 'extend'",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group includes with 'include'",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group requires only one matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group doesn't include a module when already included in ancestor",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group doesn't extend when ancestor is already extended with same module",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#configure_group doesn't prepend a module when already present in ancestor chain",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#alias_example_group_to overrides existing definitions of the aliased method name without issueing warnings",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#alias_example_group_to behaves like metadata hash builder treats symbols as metadata keys with a true value",  "expected true"
  fails "RSpec::Core::Configuration#alias_example_group_to when the aliased method is used behaves like metadata hash builder treats symbols as metadata keys with a true value",  "expected true"
  fails "RSpec::Core::Configuration#alias_example_to behaves like metadata hash builder treats symbols as metadata keys with a true value",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#alias_example_to behaves like metadata hash builder still processes hash values normally",  "undefined method `metadata' for nil"
  fails "RSpec::Core::Configuration#seed_used? returns false if neither ordering registry used the seed",  "expected false"
  fails "RSpec::Core::Configuration#seed_used? returns true if the ordering registry used the seed",  "expected true"
  fails "RSpec::Core::Configuration#warnings is loaded from config by #force",  "expected: true"
  fails "RSpec::Core::Configuration hooks issues a deprecation warning when filtering by `:example_group`",  "(#<RSpec::Core::Reporter:0x27ab6 @configuration=#<RSpec::Core::Configuration:0x1c4b8 @start_time=2022"
  fails "RSpec::Core::Configuration#shared_context_metadata_behavior cannot be set to any other values",  "expected ArgumentError with a string including \"shared_context_metadata_behavior\", \":another_value\", "
  fails "RSpec::Core::DRbRunner with server running falls back to `druby://:0` when `druby://localhost:0` fails",  "undefined method `start_service' for DRb"
  fails "RSpec::Core::DRbRunner with server running returns 0 if spec passes",  "undefined method `start_service' for DRb"
  fails "RSpec::Core::DRbRunner with server running returns 1 if spec fails",  "undefined method `start_service' for DRb"
  fails "RSpec::Core::DRbRunner with server running outputs colorized text when running with --force-color option",  "undefined method `start_service' for DRb"
  fails "RSpec::Core::ExampleGroup does not treat the first argument as a metadata key even if it is a symbol",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup treats the first argument as part of the description when it is a symbol",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup minimizes the number of methods that users could inadvertantly overwrite",  "expected collection contained:  [\"described_class\", \"is_expected\", \"pending\", \"setup_mocks_for_rspec\""
  fails "RSpec::Core::ExampleGroup behaves like metadata hash builder treats symbols as metadata keys with a true value",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup behaves like metadata hash builder still processes hash values normally",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming gives groups friendly human readable class names",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming nests constants to match the group nesting",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming removes non-ascii characters from the const name since some rubies barf on that",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming prefixes the const name with \"Nested\" if needed to make a valid const",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming does not warn when defining a Config example group (since RbConfig triggers warnings when Config is referenced)",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming ignores top level constants that have the same name",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming disambiguates name collisions by appending a number",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming identifies unnamed groups as \"Anonymous\"",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming assigns the const before evaling the group so error messages include the name",  "expected /ExampleGroups::CallingAnUndefinedMethod/, got #<RSpec::Core::ExampleGroup::WrongScopeError:"
  fails "RSpec::Core::ExampleGroup constant naming assigns the const before including shared contexts via metadata so error messages from eval'ing the context include the name",  "undefined method `bar' for RSpec::ExampleGroups::Group_5"
  fails "RSpec::Core::ExampleGroup constant naming does not have problems with example groups named \"Core\"",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup constant naming does not have problems with example groups named \"RSpec\"",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup ordering when tagged with `:order => :defined` orders the subgroups and examples in defined order regardless of global order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup top level group runs its children",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup top level group descendants returns self + all descendants",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup child is not registered in world",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup child is known by parent",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering with no examples or groups that match filters returns none",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering with no filters returns all",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a symbol exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a symbol exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a symbol inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a symbol inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a string exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a string exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a string inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a symbol against a string inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a symbol exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a symbol exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a symbol inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a symbol inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a string exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a string exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a string inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching a string against a string inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against :true exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against :true exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against :true inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against :true inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against 'true' exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against 'true' exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against 'true' inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against 'true' inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against true exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against true exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against true inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching true against true inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against :false exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against :false exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against :false inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against :false inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against 'false' exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against 'false' exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against 'false' inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against 'false' inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against false exclusion excludes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against false exclusion excludes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against false inclusion includes examples directly matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup filtering matching false against false inclusion includes examples in groups matching filter",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class for `describe(SomeClass)` within a `describe 'some string' group has the inner described class as the described_class of the inner group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class in a nested group inherits the described class/module from the outer group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class in a nested group when a class is passed overrides the described class even when described_class is referenced in the outer group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class in a nested group when a class is passed overrides the described class",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class with a constant in an outer group and metadata redefinition after `described_class` call is the redefined level constant",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class with a constant in an outer group and a string in an inner group is the top level constant",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class with a string as the first parameter is nil",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#described_class with a constant as the first parameter is that constant",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#description grabs the description from the metadata",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#metadata adds the line_number to metadata",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#metadata has a reader for file_path",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#metadata adds the the file_path to metadata",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#metadata adds the third parameter to the metadata",  "undefined method `bar' for RSpec::ExampleGroups::Object_6"
  fails "RSpec::Core::ExampleGroup.focus defines an example that can be filtered with :focus => true",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.fexample defines an example that can be filtered with :focus => true",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.fit defines an example that can be filtered with :focus => true",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.fspecify defines an example that can be filtered with :focus => true",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks treats an error in before(:all) as a failure for a spec in a nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks treats an error in before(:all) as a failure",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks treats an error in before(:each) as a failure",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks runs before_all_defined_in_config, before all, before each, example, after each, after all, after_all_defined_in_config in that order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks only runs before/after(:all) hooks from example groups that have specs that run",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks runs the after alls in reverse order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks runs the after eachs in reverse order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks runs the before eachs in order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks runs the before alls in order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks when an error occurs in an after(:all) hook sets `world.non_example_failure` so the exit status will be non-zero",  "expected result to have changed from a falsey value to true, but did not change"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks when an error occurs in an after(:all) hook still runs both after blocks",  "expected: [\"two\", \"one\"]"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks when an error occurs in an after(:all) hook rescues any error(s) and prints them out",  "(#<RSpec::Core::Reporter:0x27ab6 @configuration=#<RSpec::Core::Configuration:0x1c4b8 @start_time=2022"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks when an error occurs in an after(:all) hook allows the example to pass",  "expected: \"passed\""
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks after(:all) cleans up ivars in after(:all)",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks after(:all) has access to state defined before(:all)",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing aliases the `:example` hook scope to `:each` for after-hooks",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing aliases the `:context` hook scope to `:all` for after-hooks",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing aliases the `:example` hook scope to `:each` for before-hooks",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing aliases the `:context` hook scope to `:all` for before-hooks",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing #currently_executing_a_context_hook? unsets currently_executing_a_context_hook? after an after(:context) hook is done",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing #currently_executing_a_context_hook? sets currently_executing_a_context_hook? during after(:context) execution",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing #currently_executing_a_context_hook? does not set currently_executing_a_context_hook? outside of before(:context) execution",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing #currently_executing_a_context_hook? sets currently_executing_a_context_hook? during before(:context) execution",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#before, after, and around hooks scope aliasing #currently_executing_a_context_hook? sets currently_executing_a_context_hook? to false initially",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.pending generates a pending example when no block is provided",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.pending sets the backtrace to the example definition so it can be located by the user",  "undefined method `backtrace' for nil"
  fails "RSpec::Core::ExampleGroup.pending sets the pending message",  "expected: \"No reason given\""
  fails "RSpec::Core::ExampleGroup pending with metadata sets the pending message",  "expected: \"No reason given\""
  fails "RSpec::Core::ExampleGroup pending with message in metadata sets the pending message",  "expected: \"not done\""
  fails "RSpec::Core::ExampleGroup.skip sets the pending message",  "expected: \"No reason given\""
  fails "RSpec::Core::ExampleGroup skip with metadata sets the pending message",  "expected: \"No reason given\""
  fails "RSpec::Core::ExampleGroup skip with message in metadata sets the pending message",  "expected: \"not done\""
  fails "RSpec::Core::ExampleGroup.xit sets the pending message",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xit generates a skipped example",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xspecify sets the pending message",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xspecify generates a skipped example",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xexample sets the pending message",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xexample generates a skipped example",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.xdescribe generates a pending example group",  "expected [{\"exception\"=>nil, \"finished_at\"=>nil, \"pending_exception\"=>nil, \"pending_fixed\"=>nil, \"pen"
  fails "RSpec::Core::ExampleGroup.xcontext generates a pending example group",  "expected [{\"exception\"=>nil, \"finished_at\"=>nil, \"pending_exception\"=>nil, \"pending_fixed\"=>nil, \"pen"
  fails "RSpec::Core::ExampleGroup.fdescribe generates an example group that can be filtered with :focus",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup.fcontext generates an example group that can be filtered with :focus",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup setting pending metadata in parent marks every example as pending",  "expected [{\"exception\"=>nil, \"finished_at\"=>nil, \"pending_exception\"=>nil, \"pending_fixed\"=>nil, \"pen"
  fails "RSpec::Core::ExampleGroup adding examples maintains the example order",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup adding examples exposes all examples at examples",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup adding examples allows adding an example using 'it'",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#top_level_description returns the description from the outermost example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#run with nested example failing returns true",  "expected false"
  fails "RSpec::Core::ExampleGroup#run with top level example failing returns false",  "expected false"
  fails "RSpec::Core::ExampleGroup#run with `fail_fast` set to `nil` does not run abort due to failures",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata does not cause duplicate hooks to be added when re-configuring the group",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExampleGroup_2::UpdateI"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata applies new metadata-based config items based on the update",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExampleGroup_2::UpdateI"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata propogates metadata updates to previously declared child group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata propogates metadata updates to previously declared child examples",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata does not replace the existing metadata object with a new one or change its default proc",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata overwrites metadata originating from a parent",  "undefined method `bar' for RSpec::ExampleGroups::Grour_9"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata does not overwrite existing metadata originating from that level",  "undefined method `bar' for RSpec::ExampleGroups::Grous_0"
  fails "RSpec::Core::ExampleGroup#update_inherited_metadata updates the group metadata with the provided hash",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples evals the block when given",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples evals the shared example group only once",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples adds shared instance methods to the group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples passes parameters to the shared content",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples leaves RSpec's thread metadata unchanged, even when an error occurs during evaluation",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples leaves RSpec's thread metadata unchanged",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples raises a helpful error message when shared content is accessed recursively",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples raises a helpful error message when shared content is not found",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_examples includes the named examples",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context evals the block when given",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context evals the shared example group only once",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context adds shared instance methods to the group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context passes parameters to the shared content",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context leaves RSpec's thread metadata unchanged, even when an error occurs during evaluation",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context leaves RSpec's thread metadata unchanged",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context raises a helpful error message when shared content is accessed recursively",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context raises a helpful error message when shared content is not found",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#include_context includes the named examples",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like leaves RSpec's thread metadata unchanged",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like evals the shared example group only once",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like adds shared instance methods to nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like passes parameters to the shared example group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like adds shared class methods to nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like adds shared instance methods to nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like adds shared examples to nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like creates a nested group for a class",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like creates a nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup#it_should_behave_like given a block evaluates the block in nested group",  "undefined method `metadata' for nil"
  fails "RSpec::Core::ExampleGroup inspect output does not pollute an example's `inspect` output with the inspect ivar from `before(:context)`",  "expected nil to end with \"\\\"example at /home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec"
  fails "RSpec::Core::ExampleGroup inspect output handles after context hooks",  "expected: \"#<RSpec::ExampleGroups::SomeClass4 after(:context) hook>\""
  fails "RSpec::Core::ExampleGroup inspect output handles before context hooks",  "expected: \"#<RSpec::ExampleGroups::SomeClass3 before(:context) hook>\""
  fails "RSpec::Core::ExampleGroup inspect output when an example does not have a description includes fallback description",  "expected: \"#<RSpec::ExampleGroups::SomeClass2 \\\"example at /home/user/Code/opal/opal-rspec/rspec-core"
  fails "RSpec::Core::ExampleGroup inspect output when an example has a description includes description and location",  "expected: \"#<RSpec::ExampleGroups::SomeClass1 \\\"an example\\\" (/home/user/Code/opal/opal-rspec/rspec-c"

  fails "RSpec::Core::Example does not interfere with per-example randomness when running examples in a random order",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample \"does not inter"
  fails "RSpec::Core::Example behaves like metadata hash builder treats symbols as metadata keys with a true value",  "expected true"
  fails "RSpec::Core::Example#rerun_argument returns the location-based rerun argument",  "expected: \"/home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/rspec/core/example_spec.rb:38\""
  fails "RSpec::Core::Example#update_inherited_metadata applies new metadata-based config items based on the update",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::UpdateInherite"
  fails "RSpec::Core::Example when there is no explicit description when `expect_with :rspec` is configured when the matcher's `description` method raises an error allows the example to pass and surfaces the failing description in the example description",  "expected #<RSpec::Core::Example \"example at /home/user/Code/opal/opal-rspec/rspec-core/upstream/spec/"
  fails "RSpec::Core::Example#run memory leaks, see GH-321, GH-1921 can still be referenced by user code afterwards",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Run::MemoryLea"

  fails "RSpec::Core::Example setting the current example sets RSpec.current_example to the example that is currently running",  "expected: [#<RSpec::Core::Example \"example 1\">, #<RSpec::Core::Example \"example 2\">]"
  fails "RSpec::Core::Example#skipped? only returns true / false values",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skipped \"only "
  fails "RSpec::Core::Example#skip in around(:each) sets the example to skipped",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InAround"
  fails "RSpec::Core::Example#skip in before(:all) sets each example to skipped",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InBefore"
  fails "RSpec::Core::Example#skip in before(:each) sets each example to skipped",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InBefore"
  fails "RSpec::Core::Example#skip in the example allows post-example processing in around hooks (see https://github.com/rspec/rspec-core/issues/322)",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InTheExa"
  fails "RSpec::Core::Example#skip in the example sets the example to skipped",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InTheExa"
  fails "RSpec::Core::Example#skip in the example with a message sets the example to skipped with the provided message",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Skip::InTheExa"
  fails "RSpec::Core::Example#pending? only returns true / false values",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending_2 \"onl"
  fails "RSpec::Core::Example#pending in after(:each) sets each example to pending",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InAft"
  fails "RSpec::Core::Example#pending in around(:each) sets example to pending when failure occurs in around(:each)",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InAro"
  fails "RSpec::Core::Example#pending in around(:each) sets the example to pending",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InAro"
  fails "RSpec::Core::Example#pending in before(:each) sets example to pending when failure occurs in before(:each)",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InBef"
  fails "RSpec::Core::Example#pending in before(:each) sets each example to pending",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InBef"
  fails "RSpec::Core::Example#pending in the example allows post-example processing in around hooks (see https://github.com/rspec/rspec-core/issues/322)",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InThe"
  fails "RSpec::Core::Example#pending in the example sets the example to pending",  "undefined method `describe_successfully' for #<RSpec::ExampleGroups::RSpecCoreExample::Pending::InThe"
  fails "RSpec::Core::Example reporting example_finished from a context hook fills in the execution result details before reporting a skipped example as finished",  "Expected example to fail since it is pending, but it passed."
end
